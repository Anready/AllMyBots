import time
import telebot
import requests
from geopy.geocoders import Nominatim
from telebot import types

from itertools import groupby

bot = telebot.TeleBot('5568749424:AAGVEEjzwKmYtzbFM1XZKorm563mERLA88I')


user_id1 = ''
g = ""
ip = ""
lat = ""
prov = ''
q = 0
lon = ""
a = ""
s = 0.1
d = 0.1
f = 0.1
g = 0.1
h = 0.1
j = 0.1
k = ""
all = []


def main(user_id):
    my_user_id = user_id
    all.append(my_user_id)

    keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    button_geo1 = types.KeyboardButton(text="–ü–æ–≥–æ–¥–∞ –≤ –ö–∏–µ–≤–µ")
    button_geo3 = types.KeyboardButton(text="–ü–æ–≥–æ–¥–∞ –≤ –ö—Ä–∏–≤–æ–º –†–æ–≥–µ")
    button_geo = types.KeyboardButton(text="–ü–æ–≥–æ–¥–∞ –ø–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—é", request_location=True)
    button_geo4 = types.KeyboardButton(text="–ü–æ–≥–æ–¥–∞ –≤ –î–Ω–µ–ø—Ä–µ")
    button_geo5 = types.KeyboardButton(text="–ü–æ–≥–æ–¥–∞ –≤ –û–¥–µ—Å—Å–µ")
    keyboard.add(button_geo1,button_geo3)
    keyboard.add(button_geo)
    keyboard.add(button_geo4,button_geo5)
    bot.send_message(user_id,"–í–≤–µ–¥–∏—Ç–µ üó∫–≥–æ—Ä–æ–¥üó∫ —á—Ç–æ–±—ã –±–µ–ª–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–∏–ª–∞ –ø–æ–≥–æ–¥—É. \n–ò–ª–∏ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –ø–æ–≥–æ–¥—É –ø–æ üß≠–º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—éüß≠", reply_markup=keyboard)

@bot.message_handler(content_types=['location'])
def location (message):
    if message.location is not None:
        geolocator = Nominatim(user_agent="here")
        a = [message.location.latitude, message.location.longitude]
        geos = geolocator.reverse(a, language='ru')  # –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∞–¥—Ä–µ—Å –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
        geoloc = geos.address
        lst = geoloc.split(',')
        country = lst[0]
        city_name = country
        first_string = lst[4]
        first_string = first_string[1:]
        get_info_by_ip(first_string, message.chat.id)


@bot.message_handler(commands = ['start'])
def start(message):
    user_id = message.chat.id
    main(user_id)

@bot.message_handler(commands = ['restart'])
def start(message):
    user_id = message.chat.id
    bot.send_message(user_id, "–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω")
    main(user_id)

@bot.message_handler(commands=['?K5&7z{wk&YT7fR41WES,z$zfeNEgPct6LUFuhc$'])
def callback_worker(message):
    new_x = [el for el, _ in groupby(all)]
    for i in range(len(new_x)):
        bot.send_message(new_x[i], "–í–Ω–∏–º–∞–Ω–∏–µ –±–æ—Ç –±—ã–ª –æ–±–Ω–æ–≤–ª–µ–Ω! –ù–∞–ø–∏—à–∏—Ç–µ /restart –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")

def get_info_by_ip(city, user_id):
    try:
        res = requests.get(url=f'http://api.openweathermap.org/data/2.5/forecast?q={city}&appid=24a9a30b015719f513b372d4fd5e0afd&units=metric&lang=ru')
        data = res.json()
        a =str.title(data['list'][0]['weather'][0]['description'])
        s =data['list'][0]['main']['temp']
        d =data['list'][0]['main']['feels_like']
        f =data['list'][0]['main']['temp_min']
        g =data['list'][0]['main']['temp_max']
        h =data['list'][0]['visibility']
        j =data['list'][0]['wind']['speed']
        bot.send_message(user_id, f"üó∫–ë–µ–ª–∫–∞ –ø—Ä—ã–≥–∞–µ—Ç –≤ –≥–æ—Ä–æ–¥ {city}üó∫")
        bot.send_sticker(user_id, 'CAACAgIAAxkBAAIBG2LtBUne_z8IqZKNGCa4OvKQlFNeAAKaAAP3AsgP0dUG8v161DgpBA')
        time.sleep(5)
        bot.send_message(user_id, f"üêø–ü–æ–≥–æ–¥–∞ –Ω–∞–π–¥–µ–Ω–∞!üêø")
        time.sleep(2)
        bot.send_message(user_id, f"üïõ –°–µ–π—á–∞—Å üïõ: {a}\nüå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ üå°: {s}\nüî•‚ùÑ –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ ‚ùÑüî•: {d}\n‚ùÑüå° –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å–µ–≥–æ–¥–Ω—è üå°‚ùÑ: {f}\nüå°üî• –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å–µ–≥–æ–¥–Ω—è üî•üå°: {g}\nüëÅ–í–∏–¥–∏–º–æ—Å—Ç—åüëÅ: {h} –º–µ—Ç—Ä–æ–≤\n–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞üå¨: {j}–º/—Å")
    except Exception as e:
        bot.send_message(user_id, "‚Äºüó∫–ë–µ–ª–∫–∞ –Ω–µ –Ω–∞—à–ª–∞ —ç—Ç–æ—Ç –≥–æ—Ä–æ–¥ –Ω–∞ –∫–∞—Ä—Ç–µ: –≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ –∫–æ—Ä—Ä–µ—Ç–Ω–æüó∫‚Äº", parse_mode='html')
        pass



@bot.message_handler(content_types=['text'])
def opis(message):
    if(message.text == '–ü–æ–≥–æ–¥–∞ –≤ –ö–∏–µ–≤–µ'):
        get_info_by_ip("–ö–∏–µ–≤", message.chat.id)
    elif(message.text == '–ü–æ–≥–æ–¥–∞ –≤ –ö—Ä–∏–≤–æ–º –†–æ–≥–µ'):
        get_info_by_ip("–ö—Ä–∏–≤–æ–π —Ä–æ–≥", message.chat.id)
    elif(message.text == '–ü–æ–≥–æ–¥–∞ –≤ –î–Ω–µ–ø—Ä–µ'):
        get_info_by_ip("–î–Ω–µ–ø—Ä", message.chat.id)
    elif(message.text == '–ü–æ–≥–æ–¥–∞ –≤ –û–¥–µ—Å—Å–µ'):
        get_info_by_ip("–û–¥–µ—Å—Å–∞", message.chat.id)
    elif (message.text == '–ú–æ—Å–∫–≤–∞'):
        bot.send_message(message.chat.id, "‚Äºüó∫–ê —Ä–∞–∑–≤–µ —ç—Ç–æ—Ç —ç—Ç–æ—Ç –≥–æ—Ä–æ–¥ —Ä–∞–∑–≤–≤–µ –µ—â–µ –µ—Å—Ç—å?üó∫‚Äº", parse_mode='html')
        bot.send_message(message.chat.id, "-–ê–ª—ë –ø—Ä–∏–≤–µ—Ç –ú—ã—à–∫–∞\n-–ü—Ä–∏–≤–µ—Ç —á—Ç–æ –Ω–∞–¥–æ?\n-–ê –ú–æ–∫–≤–∞ –µ—â–µ –µ—Å—Ç—å?\n-–î–∞, –∞ —á—Ç–æ?\n-–î–∞ –Ω–µ –Ω–∏—á–µ–≥–æ... –°–ø–∞—Å–∏–±–æ –ø–æ–∫–∞!\n-–ü–æ–∫–∞", parse_mode='html')
        time.sleep(2)
        bot.send_message(message.chat.id, "–õ–∞–¥–Ω–æ...", parse_mode='html')
        get_info_by_ip("–ú–æ—Å–∫–≤–∞", message.chat.id)
    elif (message.text == 'Moscow'):
        bot.send_message(message.chat.id,"‚Äºüó∫–ê —Ä–∞–∑–≤–µ —ç—Ç–æ—Ç —ç—Ç–æ—Ç –≥–æ—Ä–æ–¥ —Ä–∞–∑–≤–≤–µ –µ—â–µ –µ—Å—Ç—å?üó∫‚Äº", parse_mode='html')
        bot.send_message(message.chat.id,"-–ê–ª—ë –ø—Ä–∏–≤–µ—Ç –ú—ã—à–∫–∞\n-–ü—Ä–∏–≤–µ—Ç —á—Ç–æ –Ω–∞–¥–æ?\n-–ê –ú–æ–∫–≤–∞ –µ—â–µ –µ—Å—Ç—å?\n-–î–∞, –∞ —á—Ç–æ?\n-–î–∞ –Ω–µ –Ω–∏—á–µ–≥–æ... –°–ø–∞—Å–∏–±–æ –ø–æ–∫–∞!\n-–ü–æ–∫–∞",parse_mode='html')
        time.sleep(2)
        bot.send_message(message.chat.id, "–õ–∞–¥–Ω–æ...", parse_mode='html')
        get_info_by_ip("–ú–æ—Å–∫–≤–∞", message.chat.id)
    else:
        get_info_by_ip(message.text, message.chat.id)



bot.polling(none_stop=True)
